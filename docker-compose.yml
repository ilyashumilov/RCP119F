version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - backend
    healthcheck:  # Adding health check configuration
      test: ["CMD-SHELL", "pg_isready -U postgres"]  # Health check command
      interval: 10s  # Check every 10 seconds
      timeout: 5s  # Timeout for the health check
      retries: 3  # Number of retries before considering the container unhealthy

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    command: /bin/bash -c "python3 db/create_tables.py && uvicorn app.api:app --host=0.0.0.0 --port=8000"
    environment:
      INIT_DB: "True"
    networks:
      - backend
    restart: always

  celeryworker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: celery -A tasks.tasks worker --loglevel=info
    networks:
      - backend

  celerybeat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - celeryworker
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    command: celery -A tasks.tasks beat --loglevel=info
    networks:
      - backend

networks:
  backend:
